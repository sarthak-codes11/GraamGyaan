import React, { useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import { useBoundStore } from "~/hooks/useBoundStore";
import { LeftBar } from "~/components/LeftBar";
import RightBar from "~/components/RightBar";

// Advanced Math module content
const moduleContent = {
  title: "Advanced Mathematics",
  description: "Master advanced mathematical concepts including calculus, algebra, and geometry",
  totalLessons: 12,
  estimatedTime: "8-10 hours",
  difficulty: "Advanced",
  
  chapters: [
    {
      id: 1,
      title: "Differential Calculus",
      lessons: [
        {
          id: 1,
          title: "Introduction to Limits",
          duration: "45 min",
          completed: false,
          content: {
            theory: `
              <h3>Understanding Limits</h3>
              <p>A limit describes the behavior of a function as its input approaches a particular value. It's the foundation of calculus.</p>
              
              <h4>Definition</h4>
              <p>The limit of f(x) as x approaches c is L, written as:</p>
              <div class="math-formula">lim(x‚Üíc) f(x) = L</div>
              
              <h4>Properties of Limits</h4>
              <ul>
                <li>Sum Rule: lim[f(x) + g(x)] = lim f(x) + lim g(x)</li>
                <li>Product Rule: lim[f(x) √ó g(x)] = lim f(x) √ó lim g(x)</li>
                <li>Quotient Rule: lim[f(x) / g(x)] = lim f(x) / lim g(x) (if lim g(x) ‚â† 0)</li>
              </ul>
            `,
            examples: [
              {
                problem: "Find lim(x‚Üí2) (x¬≤ + 3x - 1)",
                solution: "Substitute x = 2: (2)¬≤ + 3(2) - 1 = 4 + 6 - 1 = 9"
              },
              {
                problem: "Find lim(x‚Üí0) (sin x / x)",
                solution: "This is a standard limit equal to 1"
              }
            ]
          }
        },
        {
          id: 2,
          title: "Derivatives and Differentiation",
          duration: "60 min",
          completed: false,
          content: {
            theory: `
              <h3>Introduction to Derivatives</h3>
              <p>The derivative represents the rate of change of a function at any given point.</p>
              
              <h4>Definition</h4>
              <p>The derivative of f(x) is:</p>
              <div class="math-formula">f'(x) = lim(h‚Üí0) [f(x+h) - f(x)] / h</div>
              
              <h4>Basic Derivative Rules</h4>
              <ul>
                <li>Power Rule: d/dx(x‚Åø) = nx^(n-1)</li>
                <li>Sum Rule: d/dx[f(x) + g(x)] = f'(x) + g'(x)</li>
                <li>Product Rule: d/dx[f(x)g(x)] = f'(x)g(x) + f(x)g'(x)</li>
                <li>Chain Rule: d/dx[f(g(x))] = f'(g(x)) √ó g'(x)</li>
              </ul>
            `,
            examples: [
              {
                problem: "Find the derivative of f(x) = 3x¬≤ + 2x - 5",
                solution: "f'(x) = 6x + 2"
              },
              {
                problem: "Find the derivative of f(x) = (x¬≤ + 1)(x - 2)",
                solution: "Using product rule: f'(x) = (2x)(x-2) + (x¬≤+1)(1) = 2x¬≤ - 4x + x¬≤ + 1 = 3x¬≤ - 4x + 1"
              }
            ]
          }
        },
        {
          id: 3,
          title: "Applications of Derivatives",
          duration: "50 min",
          completed: false,
          content: {
            theory: `
              <h3>Real-world Applications</h3>
              <p>Derivatives have numerous practical applications in physics, economics, and engineering.</p>
              
              <h4>Key Applications</h4>
              <ul>
                <li><strong>Velocity and Acceleration:</strong> If s(t) is position, then v(t) = s'(t) is velocity and a(t) = v'(t) is acceleration</li>
                <li><strong>Optimization:</strong> Finding maximum and minimum values of functions</li>
                <li><strong>Related Rates:</strong> How one quantity changes with respect to another</li>
                <li><strong>Curve Sketching:</strong> Understanding the shape and behavior of functions</li>
              </ul>
            `,
            examples: [
              {
                problem: "A ball is thrown upward with initial velocity 64 ft/s. Find when it reaches maximum height.",
                solution: "s(t) = -16t¬≤ + 64t. v(t) = s'(t) = -32t + 64. Set v(t) = 0: t = 2 seconds"
              }
            ]
          }
        }
      ]
    },
    {
      id: 2,
      title: "Integral Calculus",
      lessons: [
        {
          id: 4,
          title: "Introduction to Integration",
          duration: "55 min",
          completed: false,
          content: {
            theory: `
              <h3>Understanding Integration</h3>
              <p>Integration is the reverse process of differentiation. It finds the area under curves and accumulates quantities.</p>
              
              <h4>Indefinite Integral</h4>
              <p>‚à´ f(x) dx = F(x) + C, where F'(x) = f(x)</p>
              
              <h4>Basic Integration Rules</h4>
              <ul>
                <li>Power Rule: ‚à´ x‚Åø dx = x^(n+1)/(n+1) + C (n ‚â† -1)</li>
                <li>Sum Rule: ‚à´ [f(x) + g(x)] dx = ‚à´ f(x) dx + ‚à´ g(x) dx</li>
                <li>Constant Multiple: ‚à´ k¬∑f(x) dx = k¬∑‚à´ f(x) dx</li>
              </ul>
            `,
            examples: [
              {
                problem: "Find ‚à´ (3x¬≤ + 2x - 1) dx",
                solution: "‚à´ (3x¬≤ + 2x - 1) dx = x¬≥ + x¬≤ - x + C"
              }
            ]
          }
        }
      ]
    },
    {
      id: 3,
      title: "Advanced Algebra",
      lessons: [
        {
          id: 5,
          title: "Complex Numbers",
          duration: "40 min",
          completed: false,
          content: {
            theory: `
              <h3>Introduction to Complex Numbers</h3>
              <p>Complex numbers extend the real number system to include solutions to equations like x¬≤ + 1 = 0.</p>
              
              <h4>Standard Form</h4>
              <p>A complex number is written as: z = a + bi</p>
              <p>where a is the real part, b is the imaginary part, and i = ‚àö(-1)</p>
              
              <h4>Operations</h4>
              <ul>
                <li>Addition: (a + bi) + (c + di) = (a + c) + (b + d)i</li>
                <li>Multiplication: (a + bi)(c + di) = (ac - bd) + (ad + bc)i</li>
                <li>Conjugate: The conjugate of a + bi is a - bi</li>
              </ul>
            `,
            examples: [
              {
                problem: "Multiply (3 + 2i)(1 - 4i)",
                solution: "(3 + 2i)(1 - 4i) = 3 - 12i + 2i - 8i¬≤ = 3 - 10i + 8 = 11 - 10i"
              }
            ]
          }
        }
      ]
    }
  ]
};

export default function AdvancedMathModule() {
  const router = useRouter();
  const isHindi = router.pathname.startsWith("/hindi");
  const isTelugu = router.pathname.startsWith("/telugu");
  
  // Check if user has purchased this module
  const isPurchased = useBoundStore((x) => x.isPurchased("advanced-math"));
  const increaseXp = useBoundStore((x) => x.increaseXp);
  
  const [selectedLesson, setSelectedLesson] = useState<number | null>(null);
  const [completedLessons, setCompletedLessons] = useState<number[]>([]);
  
  // Translation helper
  const t = (en: string, hi: string, te: string) => {
    if (isHindi) return hi;
    if (isTelugu) return te;
    return en;
  };

  // If not purchased, redirect to shop
  if (!isPurchased) {
    return (
      <div className="flex min-h-screen bg-gray-50">
        <LeftBar selectedTab={null} />
        
        <main className="flex-1 p-6 md:ml-64">
          <div className="max-w-4xl mx-auto text-center py-16">
            <div className="text-gray-400 text-8xl mb-6">üîí</div>
            <h1 className="text-3xl font-bold text-gray-800 mb-4">
              {t("Module Not Purchased", "‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§®‡§π‡•Ä‡§Ç ‡§ñ‡§∞‡•Ä‡§¶‡§æ ‡§ó‡§Ø‡§æ", "‡∞Æ‡∞æ‡∞°‡±ç‡∞Ø‡±Ç‡∞≤‡±ç ‡∞ï‡±ä‡∞®‡±Å‡∞ó‡±ã‡∞≤‡±Å ‡∞ö‡±á‡∞Ø‡∞≤‡±á‡∞¶‡±Å")}
            </h1>
            <p className="text-gray-600 mb-6">
              {t(
                "You need to purchase the Advanced Mathematics module to access this content.",
                "‡§á‡§∏ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™‡§ï‡•ã ‡§â‡§®‡•ç‡§®‡§§ ‡§ó‡§£‡§ø‡§§ ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§ñ‡§∞‡•Ä‡§¶‡§®‡§æ ‡§π‡•ã‡§ó‡§æ‡•§",
                "‡∞à ‡∞ï‡∞Ç‡∞ü‡±Ü‡∞Ç‡∞ü‡±ç‚Äå‡∞®‡±Å ‡∞Ø‡∞æ‡∞ï‡±ç‡∞∏‡±Ü‡∞∏‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞Ö‡∞°‡±ç‡∞µ‡∞æ‡∞®‡±ç‡∞∏‡±ç‚Äå‡∞°‡±ç ‡∞Æ‡±ç‡∞Ø‡∞æ‡∞•‡∞Æ‡±Ü‡∞ü‡∞ø‡∞ï‡±ç‡∞∏‡±ç ‡∞Æ‡∞æ‡∞°‡±ç‡∞Ø‡±Ç‡∞≤‡±ç‚Äå‡∞®‡±Å ‡∞ï‡±ä‡∞®‡±Å‡∞ó‡±ã‡∞≤‡±Å ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø."
              )}
            </p>
            <Link
              href={isHindi ? "/hindi/shop" : isTelugu ? "/telugu/shop" : "/shop"}
              className="inline-flex items-center px-6 py-3 bg-[#654321] text-white rounded-lg font-medium hover:bg-[#543619] transition-colors"
            >
              {t("Go to Shop", "‡§¶‡•Å‡§ï‡§æ‡§® ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç", "‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞µ‡±Ü‡∞≥‡±ç‡∞≥‡∞Ç‡∞°‡∞ø")}
            </Link>
          </div>
        </main>
        
        <RightBar />
      </div>
    );
  }

  const handleCompleteLesson = (lessonId: number) => {
    if (!completedLessons.includes(lessonId)) {
      setCompletedLessons([...completedLessons, lessonId]);
      increaseXp(20); // Award 20 XP for completing a lesson
    }
  };

  const selectedLessonContent = selectedLesson 
    ? moduleContent.chapters
        .flatMap(chapter => chapter.lessons)
        .find(lesson => lesson.id === selectedLesson)
    : null;

  return (
    <div className="flex min-h-screen bg-gray-50">
      <LeftBar selectedTab={null} />
      
      <main className="flex-1 p-6 md:ml-64">
        <div className="max-w-6xl mx-auto">
          {/* Header */}
          <div className="mb-8">
            <div className="flex items-center gap-4 mb-4">
              <Link
                href="/purchased-courses"
                className="text-blue-600 hover:text-blue-800 font-medium"
              >
                ‚Üê {t("Back to Courses", "‡§ï‡•ã‡§∞‡•ç‡§∏ ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç", "‡∞ï‡±ã‡∞∞‡±ç‡∞∏‡±Å‡∞≤‡∞ï‡±Å ‡∞§‡∞ø‡∞∞‡∞ø‡∞ó‡∞ø ‡∞µ‡±Ü‡∞≥‡±ç‡∞≥‡∞Ç‡∞°‡∞ø")}
              </Link>
            </div>
            
            <div className="bg-white rounded-xl p-6 shadow-sm border">
              <h1 className="text-4xl font-bold text-[#654321] mb-2">{moduleContent.title}</h1>
              <p className="text-gray-600 mb-4">{moduleContent.description}</p>
              
              <div className="flex flex-wrap gap-4 text-sm">
                <span className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full">
                  {moduleContent.totalLessons} {t("Lessons", "‡§™‡§æ‡§†", "‡∞™‡∞æ‡∞†‡∞æ‡∞≤‡±Å")}
                </span>
                <span className="bg-green-100 text-green-800 px-3 py-1 rounded-full">
                  {moduleContent.estimatedTime}
                </span>
                <span className="bg-purple-100 text-purple-800 px-3 py-1 rounded-full">
                  {moduleContent.difficulty}
                </span>
                <span className="bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full">
                  {completedLessons.length}/{moduleContent.totalLessons} {t("Completed", "‡§™‡•Ç‡§∞‡•ç‡§£", "‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞Ø‡∞ø‡∞Ç‡∞¶‡∞ø")}
                </span>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* Lesson List */}
            <div className="lg:col-span-1">
              <div className="bg-white rounded-xl p-6 shadow-sm border">
                <h2 className="text-xl font-bold text-gray-800 mb-4">
                  {t("Course Content", "‡§ï‡•ã‡§∞‡•ç‡§∏ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä", "‡∞ï‡±ã‡∞∞‡±ç‡∞∏‡±ç ‡∞ï‡∞Ç‡∞ü‡±Ü‡∞Ç‡∞ü‡±ç")}
                </h2>
                
                <div className="space-y-4">
                  {moduleContent.chapters.map(chapter => (
                    <div key={chapter.id}>
                      <h3 className="font-semibold text-gray-700 mb-2">{chapter.title}</h3>
                      <div className="space-y-2 ml-4">
                        {chapter.lessons.map(lesson => (
                          <button
                            key={lesson.id}
                            onClick={() => setSelectedLesson(lesson.id)}
                            className={`w-full text-left p-3 rounded-lg border transition-colors ${
                              selectedLesson === lesson.id
                                ? "border-blue-500 bg-blue-50"
                                : "border-gray-200 hover:border-gray-300"
                            }`}
                          >
                            <div className="flex items-center justify-between">
                              <div>
                                <div className="font-medium text-sm">{lesson.title}</div>
                                <div className="text-xs text-gray-500">{lesson.duration}</div>
                              </div>
                              {completedLessons.includes(lesson.id) && (
                                <div className="text-green-500">‚úì</div>
                              )}
                            </div>
                          </button>
                        ))}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Lesson Content */}
            <div className="lg:col-span-2">
              {selectedLessonContent ? (
                <div className="bg-white rounded-xl p-6 shadow-sm border">
                  <div className="flex items-center justify-between mb-6">
                    <div>
                      <h2 className="text-2xl font-bold text-gray-800">{selectedLessonContent.title}</h2>
                      <p className="text-gray-600">{selectedLessonContent.duration}</p>
                    </div>
                    {!completedLessons.includes(selectedLesson!) && (
                      <button
                        onClick={() => handleCompleteLesson(selectedLesson!)}
                        className="bg-green-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-700 transition-colors"
                      >
                        {t("Mark Complete (+20 XP)", "‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç (+20 XP)", "‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞ø ‡∞ö‡±á‡∞∏‡∞ø‡∞®‡∞ü‡±ç‡∞≤‡±Å ‡∞ó‡±Å‡∞∞‡±ç‡∞§‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø (+20 XP)")}
                      </button>
                    )}
                  </div>

                  <div className="prose max-w-none">
                    <div 
                      dangerouslySetInnerHTML={{ __html: selectedLessonContent.content.theory }}
                      className="mb-6"
                    />
                    
                    {selectedLessonContent.content.examples && (
                      <div>
                        <h3 className="text-lg font-semibold mb-4">
                          {t("Examples", "‡§â‡§¶‡§æ‡§π‡§∞‡§£", "‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£‡∞≤‡±Å")}
                        </h3>
                        <div className="space-y-4">
                          {selectedLessonContent.content.examples.map((example, index) => (
                            <div key={index} className="bg-gray-50 p-4 rounded-lg">
                              <div className="font-medium text-gray-800 mb-2">
                                {t("Problem", "‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ", "‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø")}: {example.problem}
                              </div>
                              <div className="text-gray-600">
                                <strong>{t("Solution", "‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®", "‡∞™‡∞∞‡∞ø‡∞∑‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç")}:</strong> {example.solution}
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              ) : (
                <div className="bg-white rounded-xl p-6 shadow-sm border text-center">
                  <div className="text-gray-400 text-6xl mb-4">üìñ</div>
                  <h3 className="text-xl font-semibold text-gray-600 mb-2">
                    {t("Select a Lesson", "‡§è‡§ï ‡§™‡§æ‡§† ‡§ö‡•Å‡§®‡•á‡§Ç", "‡∞í‡∞ï ‡∞™‡∞æ‡∞†‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø")}
                  </h3>
                  <p className="text-gray-500">
                    {t(
                      "Choose a lesson from the left sidebar to start learning",
                      "‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§æ‡§è‡§Ç ‡§∏‡§æ‡§á‡§°‡§¨‡§æ‡§∞ ‡§∏‡•á ‡§è‡§ï ‡§™‡§æ‡§† ‡§ö‡•Å‡§®‡•á‡§Ç",
                      "‡∞®‡±á‡∞∞‡±ç‡∞ö‡±Å‡∞ï‡±ã‡∞µ‡∞°‡∞Ç ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞é‡∞°‡∞Æ ‡∞∏‡±à‡∞°‡±ç‚Äå‡∞¨‡∞æ‡∞∞‡±ç ‡∞®‡±Å‡∞Ç‡∞°‡∞ø ‡∞í‡∞ï ‡∞™‡∞æ‡∞†‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø"
                    )}
                  </p>
                </div>
              )}
            </div>
          </div>
        </div>
      </main>
      
      <RightBar />
      
      <style jsx>{`
        .math-formula {
          background: #f8f9fa;
          border: 1px solid #e9ecef;
          border-radius: 4px;
          padding: 8px 12px;
          margin: 8px 0;
          font-family: 'Courier New', monospace;
          text-align: center;
        }
        
        .prose h3 {
          color: #1f2937;
          font-size: 1.25rem;
          font-weight: 600;
          margin-bottom: 0.5rem;
        }
        
        .prose h4 {
          color: #374151;
          font-size: 1.1rem;
          font-weight: 600;
          margin-bottom: 0.5rem;
        }
        
        .prose ul {
          list-style-type: disc;
          padding-left: 1.5rem;
          margin-bottom: 1rem;
        }
        
        .prose li {
          margin-bottom: 0.25rem;
        }
      `}</style>
    </div>
  );
}
